<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sujin.spring.orderMapper">
<!-- item_id int AI PK 
item_name varchar(45) 
item_price int 
itme_size varchar(45) 
item_stockQuantity int 
item_content varchar(500) 
item_image varchar(500)
 -->
 
 	<!-- 상품등록 -->
	<insert id="addItem" parameterType="Item">
		insert into item(item_name, item_price, item_size,item_stockQuantity, item_content, item_image)
		values (#{item_name}, #{item_price}, #{item_size}, #{item_stockQuantity} , #{item_content}, #{item_image})
	</insert>
	
	<!-- 상품 가져오기 -->
	<select id="findItem" resultType="Item">
		select item_id,item_name, item_price, item_size, item_stockQuantity, item_content, item_image from Item
	</select>
	
	<!-- id로 상품가져오기 -->
	<select id="findItemById" parameterType="int" resultType="Item">
		select item_id,item_name, item_price, item_size, item_stockQuantity, item_content, item_image 
		from Item
		where item_id=#{item_id}
	</select>
	
	<!-- 상품 수정하기 -->
	<update id="updateItem" parameterType="Item">
		update item set item_name = #{item_name}, item_price=#{item_price}, item_size=#{item_size}, item_stockQuantity=#{item_stockQuantity},
		item_content=#{item_content}, item_image=#{item_image}
		where item_id = #{item_id}
	</update>
	
	<!-- 상품 삭제하기 -->
	<delete id="deleteItem" parameterType="int">
		delete from item where item_id = #{item_id}
	</delete>
	
	<!-- 장바구니 담기 -->
	<insert id="addCart" parameterType="Cartitem">
		insert into cartitem(cartitem_member_id, cartitem_item_id, cartitem_price, cartitem_count)
		values (#{cartitem_member_id}, #{cartitem_item_id}, #{cartitem_price}, #{cartitem_count})
	</insert>
	
	<!-- 아이디로 장바구니 아이템가져오기 -->
	<select id="selectCart" parameterType="int" resultType="Map">
		select cartitem.cartitem_id,cartitem.cartitem_member_id, cartitem.cartitem_price, cartitem.cartitem_count,item.item_id, item.item_name, item.item_image
		from cartitem
		join item
		on cartitem.cartitem_item_id = item.item_id
		where cartitem.cartitem_member_id = #{cartitem_member_id}
	</select>
	
	<!-- 아이템아이디로 장바구니에 아이템찾기 -->
	<select id="selectItem" parameterType="Cartitem" resultType="Cartitem">
		select cartitem_item_id, cartitem_price, cartitem_count from cartitem 
		where cartitem_item_id = #{cartitem_item_id} and cartitem_member_id = #{cartitem_member_id}
	</select>
	
	<!--  -->
	
	<!-- 장바구니 아이템 수량 업데이트 -->
	<update id="updateCount" parameterType="Cartitem">
		update cartitem set cartitem_count = cartitem_count + #{cartitem_count} where cartitem_item_id =#{cartitem_item_id}
	</update>
	
	<!-- orderItem 생성 -->
	<insert id="orderItem" parameterType="OrderItem">
		insert into orderitem(item_id, item_name, order_price, order_count, order_id) values(#{item_id}, #{item_name}, #{order_price}, #{order_count}, #{order_id})
	</insert>
	
	<!-- orders 생성 -->
	<insert id="orders" parameterType="Orders">
		insert into orders(member_id, order_date, order_addr1, order_addr2, order_addr3)
		values(#{member_id}, now(), #{order_addr1},#{order_addr2},#{order_addr3})
	</insert>
	
	<!-- orders 가져오기 -->
	<select id="findOrders" resultType="Orders">
		select *from orders order by order_date DESC
	</select>
	
	<!-- 장바구니 삭제 -->
	<delete id="deleteCartitem">
		delete from cartitem where cartitem_item_id = #{item_id}
	</delete>
	


</mapper>